#include <string>
#include <unordered_map>

#include "sdlw.hpp"

const std::unordered_map<std::string, sdlw::Keycode>& getKeycodeMap()
{
    static std::unordered_map<std::string, sdlw::Keycode> keyCodes {
        { "unknown", sdlw::Keycode::Unknown },
        { "return", sdlw::Keycode::Return },
        { "escape", sdlw::Keycode::Escape },
        { "backspace", sdlw::Keycode::Backspace },
        { "tab", sdlw::Keycode::Tab },
        { "space", sdlw::Keycode::Space },
        { "exclaim", sdlw::Keycode::Exclaim },
        { "quotedbl", sdlw::Keycode::Quotedbl },
        { "hash", sdlw::Keycode::Hash },
        { "percent", sdlw::Keycode::Percent },
        { "dollar", sdlw::Keycode::Dollar },
        { "ampersand", sdlw::Keycode::Ampersand },
        { "quote", sdlw::Keycode::Quote },
        { "leftparen", sdlw::Keycode::LeftParen },
        { "rightparen", sdlw::Keycode::RightParen },
        { "asterisk", sdlw::Keycode::Asterisk },
        { "plus", sdlw::Keycode::Plus },
        { "comma", sdlw::Keycode::Comma },
        { "minus", sdlw::Keycode::Minus },
        { "period", sdlw::Keycode::Period },
        { "slash", sdlw::Keycode::Slash },
        { "0", sdlw::Keycode::N0 },
        { "1", sdlw::Keycode::N1 },
        { "2", sdlw::Keycode::N2 },
        { "3", sdlw::Keycode::N3 },
        { "4", sdlw::Keycode::N4 },
        { "5", sdlw::Keycode::N5 },
        { "6", sdlw::Keycode::N6 },
        { "7", sdlw::Keycode::N7 },
        { "8", sdlw::Keycode::N8 },
        { "9", sdlw::Keycode::N9 },
        { "colon", sdlw::Keycode::Colon },
        { "semicolon", sdlw::Keycode::Semicolon },
        { "less", sdlw::Keycode::Less },
        { "equals", sdlw::Keycode::Equals },
        { "greater", sdlw::Keycode::Greater },
        { "question", sdlw::Keycode::Question },
        { "at", sdlw::Keycode::At },
        { "leftbracket", sdlw::Keycode::LeftBracket },
        { "backslash", sdlw::Keycode::Backslash },
        { "rightbracket", sdlw::Keycode::RightBracket },
        { "caret", sdlw::Keycode::Caret },
        { "underscore", sdlw::Keycode::Underscore },
        { "backquote", sdlw::Keycode::Backquote },
        { "a", sdlw::Keycode::A },
        { "b", sdlw::Keycode::B },
        { "c", sdlw::Keycode::C },
        { "d", sdlw::Keycode::D },
        { "e", sdlw::Keycode::E },
        { "f", sdlw::Keycode::F },
        { "g", sdlw::Keycode::G },
        { "h", sdlw::Keycode::H },
        { "i", sdlw::Keycode::I },
        { "j", sdlw::Keycode::J },
        { "k", sdlw::Keycode::K },
        { "l", sdlw::Keycode::L },
        { "m", sdlw::Keycode::M },
        { "n", sdlw::Keycode::N },
        { "o", sdlw::Keycode::O },
        { "p", sdlw::Keycode::P },
        { "q", sdlw::Keycode::Q },
        { "r", sdlw::Keycode::R },
        { "s", sdlw::Keycode::S },
        { "t", sdlw::Keycode::T },
        { "u", sdlw::Keycode::U },
        { "v", sdlw::Keycode::V },
        { "w", sdlw::Keycode::W },
        { "x", sdlw::Keycode::X },
        { "y", sdlw::Keycode::Y },
        { "z", sdlw::Keycode::Z },
        { "capslock", sdlw::Keycode::Capslock },
        { "f1", sdlw::Keycode::F1 },
        { "f2", sdlw::Keycode::F2 },
        { "f3", sdlw::Keycode::F3 },
        { "f4", sdlw::Keycode::F4 },
        { "f5", sdlw::Keycode::F5 },
        { "f6", sdlw::Keycode::F6 },
        { "f7", sdlw::Keycode::F7 },
        { "f8", sdlw::Keycode::F8 },
        { "f9", sdlw::Keycode::F9 },
        { "f10", sdlw::Keycode::F10 },
        { "f11", sdlw::Keycode::F11 },
        { "f12", sdlw::Keycode::F12 },
        { "printscreen", sdlw::Keycode::Printscreen },
        { "scrolllock", sdlw::Keycode::Scrolllock },
        { "pause", sdlw::Keycode::Pause },
        { "insert", sdlw::Keycode::Insert },
        { "home", sdlw::Keycode::Home },
        { "pageup", sdlw::Keycode::PageUp },
        { "delete", sdlw::Keycode::Delete },
        { "end", sdlw::Keycode::End },
        { "pagedown", sdlw::Keycode::PageDown },
        { "right", sdlw::Keycode::Right },
        { "left", sdlw::Keycode::Left },
        { "down", sdlw::Keycode::Down },
        { "up", sdlw::Keycode::Up },
        { "numlockclear", sdlw::Keycode::NumLockClear },
        { "kpdivide", sdlw::Keycode::KpDivide },
        { "kpmultiply", sdlw::Keycode::KpMultiply },
        { "kpminus", sdlw::Keycode::KpMinus },
        { "kpplus", sdlw::Keycode::KpPlus },
        { "kpenter", sdlw::Keycode::KpEnter },
        { "kp1", sdlw::Keycode::Kp1 },
        { "kp2", sdlw::Keycode::Kp2 },
        { "kp3", sdlw::Keycode::Kp3 },
        { "kp4", sdlw::Keycode::Kp4 },
        { "kp5", sdlw::Keycode::Kp5 },
        { "kp6", sdlw::Keycode::Kp6 },
        { "kp7", sdlw::Keycode::Kp7 },
        { "kp8", sdlw::Keycode::Kp8 },
        { "kp9", sdlw::Keycode::Kp9 },
        { "kp0", sdlw::Keycode::Kp0 },
        { "kpperiod", sdlw::Keycode::KpPeriod },
        { "application", sdlw::Keycode::Application },
        { "power", sdlw::Keycode::Power },
        { "kpequals", sdlw::Keycode::KpEquals },
        { "f13", sdlw::Keycode::F13 },
        { "f14", sdlw::Keycode::F14 },
        { "f15", sdlw::Keycode::F15 },
        { "f16", sdlw::Keycode::F16 },
        { "f17", sdlw::Keycode::F17 },
        { "f18", sdlw::Keycode::F18 },
        { "f19", sdlw::Keycode::F19 },
        { "f20", sdlw::Keycode::F20 },
        { "f21", sdlw::Keycode::F21 },
        { "f22", sdlw::Keycode::F22 },
        { "f23", sdlw::Keycode::F23 },
        { "f24", sdlw::Keycode::F24 },
        { "execute", sdlw::Keycode::Execute },
        { "help", sdlw::Keycode::Help },
        { "menu", sdlw::Keycode::Menu },
        { "select", sdlw::Keycode::Select },
        { "stop", sdlw::Keycode::Stop },
        { "again", sdlw::Keycode::Again },
        { "undo", sdlw::Keycode::Undo },
        { "cut", sdlw::Keycode::Cut },
        { "copy", sdlw::Keycode::Copy },
        { "paste", sdlw::Keycode::Paste },
        { "find", sdlw::Keycode::Find },
        { "mute", sdlw::Keycode::Mute },
        { "volumeup", sdlw::Keycode::VolumeUp },
        { "volumedown", sdlw::Keycode::VolumeDown },
        { "kpcomma", sdlw::Keycode::KpComma },
        { "kpequalsas400", sdlw::Keycode::KpEqualsAs400 },
        { "alterase", sdlw::Keycode::AltErase },
        { "sysreq", sdlw::Keycode::Sysreq },
        { "cancel", sdlw::Keycode::Cancel },
        { "clear", sdlw::Keycode::Clear },
        { "prior", sdlw::Keycode::Prior },
        { "return2", sdlw::Keycode::Return2 },
        { "separator", sdlw::Keycode::Separator },
        { "out", sdlw::Keycode::Out },
        { "oper", sdlw::Keycode::Oper },
        { "clearagain", sdlw::Keycode::ClearAgain },
        { "crsel", sdlw::Keycode::Crsel },
        { "exsel", sdlw::Keycode::Exsel },
        { "kp00", sdlw::Keycode::Kp00 },
        { "kp000", sdlw::Keycode::Kp000 },
        { "thousandsseparator", sdlw::Keycode::ThousandsSeparator },
        { "decimalseparator", sdlw::Keycode::DecimalSeparator },
        { "currencyunit", sdlw::Keycode::CurrencyUnit },
        { "currencysubunit", sdlw::Keycode::CurrencySubUnit },
        { "kpleftparen", sdlw::Keycode::KpLeftParen },
        { "kprightparen", sdlw::Keycode::KpRightParen },
        { "kpleftbrace", sdlw::Keycode::KpLeftBrace },
        { "kprightbrace", sdlw::Keycode::KpRightBrace },
        { "kptab", sdlw::Keycode::KpTab },
        { "kpbackspace", sdlw::Keycode::KpBackspace },
        { "kpa", sdlw::Keycode::KpA },
        { "kpb", sdlw::Keycode::KpB },
        { "kpc", sdlw::Keycode::KpC },
        { "kpd", sdlw::Keycode::KpD },
        { "kpe", sdlw::Keycode::KpE },
        { "kpf", sdlw::Keycode::KpF },
        { "kpxor", sdlw::Keycode::KpXor },
        { "kppower", sdlw::Keycode::KpPower },
        { "kppercent", sdlw::Keycode::KpPercent },
        { "kpless", sdlw::Keycode::KpLess },
        { "kpgreater", sdlw::Keycode::KpGreater },
        { "kpampersand", sdlw::Keycode::KpAmpersand },
        { "kpdblampersand", sdlw::Keycode::KpDblampersand },
        { "kpverticalbar", sdlw::Keycode::KpVerticalbar },
        { "kpdblverticalbar", sdlw::Keycode::KpDblverticalbar },
        { "kpcolon", sdlw::Keycode::KpColon },
        { "kphash", sdlw::Keycode::KpHash },
        { "kpspace", sdlw::Keycode::KpSpace },
        { "kpat", sdlw::Keycode::KpAt },
        { "kpexclam", sdlw::Keycode::KpExclam },
        { "kpmemstore", sdlw::Keycode::KpMemstore },
        { "kpmemrecall", sdlw::Keycode::KpMemrecall },
        { "kpmemclear", sdlw::Keycode::KpMemclear },
        { "kpmemadd", sdlw::Keycode::KpMemadd },
        { "kpmemsubtract", sdlw::Keycode::KpMemsubtract },
        { "kpmemmultiply", sdlw::Keycode::KpMemmultiply },
        { "kpmemdivide", sdlw::Keycode::KpMemdivide },
        { "kpplusminus", sdlw::Keycode::KpPlusminus },
        { "kpclear", sdlw::Keycode::KpClear },
        { "kpclearentry", sdlw::Keycode::KpClearentry },
        { "kpbinary", sdlw::Keycode::KpBinary },
        { "kpoctal", sdlw::Keycode::KpOctal },
        { "kpdecimal", sdlw::Keycode::KpDecimal },
        { "kphexadecimal", sdlw::Keycode::KpHexadecimal },
        { "lctrl", sdlw::Keycode::Lctrl },
        { "lshift", sdlw::Keycode::Lshift },
        { "lalt", sdlw::Keycode::Lalt },
        { "lgui", sdlw::Keycode::Lgui },
        { "rctrl", sdlw::Keycode::Rctrl },
        { "rshift", sdlw::Keycode::Rshift },
        { "ralt", sdlw::Keycode::Ralt },
        { "rgui", sdlw::Keycode::Rgui },
        { "mode", sdlw::Keycode::Mode },
        { "audionext", sdlw::Keycode::AudioNext },
        { "audioprev", sdlw::Keycode::AudioPrev },
        { "audiostop", sdlw::Keycode::AudioStop },
        { "audioplay", sdlw::Keycode::AudioPlay },
        { "audiomute", sdlw::Keycode::AudioMute },
        { "mediaselect", sdlw::Keycode::MediaSelect },
        { "www", sdlw::Keycode::Www },
        { "mail", sdlw::Keycode::Mail },
        { "calculator", sdlw::Keycode::Calculator },
        { "computer", sdlw::Keycode::Computer },
        { "acsearch", sdlw::Keycode::AcSearch },
        { "achome", sdlw::Keycode::AcHome },
        { "acback", sdlw::Keycode::AcBack },
        { "acforward", sdlw::Keycode::AcForward },
        { "acstop", sdlw::Keycode::AcStop },
        { "acrefresh", sdlw::Keycode::AcRefresh },
        { "acbookmarks", sdlw::Keycode::AcBookmarks },
        { "brightnessdown", sdlw::Keycode::BrightnessDown },
        { "brightnessup", sdlw::Keycode::BrightnessUp },
        { "displayswitch", sdlw::Keycode::DisplaySwitch },
        { "kbdillumtoggle", sdlw::Keycode::KbdIllumToggle },
        { "kbdillumdown", sdlw::Keycode::KbdIllumDown },
        { "kbdillumup", sdlw::Keycode::KbdIllumUp },
        { "eject", sdlw::Keycode::Eject },
        { "sleep", sdlw::Keycode::Sleep },
        { "app1", sdlw::Keycode::App1 },
        { "app2", sdlw::Keycode::App2 },
        { "audiorewind", sdlw::Keycode::AudioRewind },
        { "audiofastforward", sdlw::Keycode::AudioFastForward },
        { "softleft", sdlw::Keycode::SoftLeft },
        { "softright", sdlw::Keycode::SoftRight },
        { "call", sdlw::Keycode::Call },
        { "endcall", sdlw::Keycode::Endcall },
    };
    return keyCodes;
}

const std::unordered_map<sdlw::Keycode, std::string>& getInvKeycodeMap()
{
    static std::unordered_map<sdlw::Keycode, std::string> inv;
    if (inv.empty()) {
        for (const auto& [name, keycode] : getKeycodeMap()) {
            inv.emplace(keycode, name);
        }
    }
    return inv;
}
